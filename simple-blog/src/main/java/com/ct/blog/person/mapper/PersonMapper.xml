<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ct.blog.person.dao.PersonMapper" >
  <resultMap id="BaseResultMap" type="com.ct.blog.person.entity.Person" >
    <id column="tb_id" property="id" jdbcType="VARCHAR" />
    <result column="tb_account" property="account" jdbcType="VARCHAR" />
    <result column="tb_password" property="password" jdbcType="VARCHAR" />
    <result column="tb_root" property="root" jdbcType="BIT" />
    <result column="tb_login_error_allow_num" property="loginErrorAllowNum" jdbcType="INTEGER" />
    <result column="tb_login_error_num" property="loginErrorNum" jdbcType="INTEGER" />
    <result column="tb_status" property="status" jdbcType="INTEGER" />
    <result column="tb_salt" property="salt" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    tb.id as tb_id, tb.account as tb_account, tb.password as tb_password, tb.root as tb_root, 
    tb.login_error_allow_num as tb_login_error_allow_num, tb.login_error_num as tb_login_error_num, 
    tb.status as tb_status, tb.salt as tb_salt
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from blog_person tb
    where tb.id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from blog_person
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ct.blog.person.entity.Person" >
    insert into blog_person (id, account, password, 
      root, login_error_allow_num, login_error_num, 
      status, salt)
    values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{root,jdbcType=BIT}, #{loginErrorAllowNum,jdbcType=INTEGER}, #{loginErrorNum,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{salt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ct.blog.person.entity.Person" >
    insert into blog_person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="root != null" >
        root,
      </if>
      <if test="loginErrorAllowNum != null" >
        login_error_allow_num,
      </if>
      <if test="loginErrorNum != null" >
        login_error_num,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="salt != null" >
        salt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="root != null" >
        #{root,jdbcType=BIT},
      </if>
      <if test="loginErrorAllowNum != null" >
        #{loginErrorAllowNum,jdbcType=INTEGER},
      </if>
      <if test="loginErrorNum != null" >
        #{loginErrorNum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ct.blog.person.entity.Person" >
    update blog_person
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="root != null" >
        root = #{root,jdbcType=BIT},
      </if>
      <if test="loginErrorAllowNum != null" >
        login_error_allow_num = #{loginErrorAllowNum,jdbcType=INTEGER},
      </if>
      <if test="loginErrorNum != null" >
        login_error_num = #{loginErrorNum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ct.blog.person.entity.Person" >
    update blog_person
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      root = #{root,jdbcType=BIT},
      login_error_allow_num = #{loginErrorAllowNum,jdbcType=INTEGER},
      login_error_num = #{loginErrorNum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      salt = #{salt,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="findByAccount" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" />
    from blog_person tb
    where tb.account = #{account,jdbcType=VARCHAR}
  </select>
  
  <select id="findByAccountAndPassword" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" />
    from blog_person tb
    where tb.account = #{account,jdbcType=VARCHAR} and tb.password= #{password,jdbcType=VARCHAR}
  </select>
  
</mapper>